{"version":3,"file":"main-d679657b.js","sources":["../../src/services/telegram.js","../../src/services/api.js","../../src/services/storage.js","../../src/app.js","../../src/utils/formatters.js"],"sourcesContent":["/**\n * Telegram Web App SDK Integration\n * Handles all Telegram-specific functionality\n */\n\nclass TelegramService {\n  constructor() {\n    this.tg = window.Telegram?.WebApp;\n    this.isReady = false;\n    this.user = null;\n    this.initData = null;\n    \n    this.init();\n  }\n\n  init() {\n    if (!this.tg) {\n      console.warn('Telegram Web App SDK not available');\n      return;\n    }\n\n    try {\n      // Initialize the Web App\n      this.tg.ready();\n      this.tg.expand();\n      \n      // Get user data\n      this.user = this.tg.initDataUnsafe?.user;\n      this.initData = this.tg.initData;\n      \n      // Set up theme\n      this.setupTheme();\n      \n      // Set up back button\n      this.setupBackButton();\n      \n      // Set up main button\n      this.setupMainButton();\n      \n      this.isReady = true;\n      console.log('Telegram Web App initialized successfully');\n      \n    } catch (error) {\n      console.error('Failed to initialize Telegram Web App:', error);\n    }\n  }\n\n  setupTheme() {\n    if (!this.tg) return;\n    \n    const theme = this.tg.colorScheme;\n    document.documentElement.setAttribute('data-theme', theme);\n    \n    // Apply Telegram theme colors\n    if (this.tg.themeParams) {\n      const root = document.documentElement;\n      const params = this.tg.themeParams;\n      \n      if (params.bg_color) {\n        root.style.setProperty('--tg-theme-bg-color', params.bg_color);\n      }\n      if (params.text_color) {\n        root.style.setProperty('--tg-theme-text-color', params.text_color);\n      }\n      if (params.hint_color) {\n        root.style.setProperty('--tg-theme-hint-color', params.hint_color);\n      }\n      if (params.link_color) {\n        root.style.setProperty('--tg-theme-link-color', params.link_color);\n      }\n      if (params.button_color) {\n        root.style.setProperty('--tg-theme-button-color', params.button_color);\n      }\n      if (params.button_text_color) {\n        root.style.setProperty('--tg-theme-button-text-color', params.button_text_color);\n      }\n      if (params.secondary_bg_color) {\n        root.style.setProperty('--tg-theme-secondary-bg-color', params.secondary_bg_color);\n      }\n    }\n  }\n\n  setupBackButton() {\n    if (!this.tg?.BackButton) return;\n    \n    this.tg.BackButton.onClick(() => {\n      this.handleBackButton();\n    });\n  }\n\n  setupMainButton() {\n    if (!this.tg?.MainButton) return;\n    \n    // Configure main button\n    this.tg.MainButton.setText('Continue');\n    this.tg.MainButton.color = '#2481cc';\n    this.tg.MainButton.textColor = '#ffffff';\n    \n    this.tg.MainButton.onClick(() => {\n      this.handleMainButton();\n    });\n  }\n\n  handleBackButton() {\n    // Custom back button logic\n    const currentView = this.getCurrentView();\n    \n    switch (currentView) {\n      case 'transactions':\n        this.showMainView();\n        break;\n      case 'analytics':\n        this.showMainView();\n        break;\n      default:\n        this.tg?.close();\n    }\n  }\n\n  handleMainButton() {\n    // Custom main button logic\n    const currentView = this.getCurrentView();\n    \n    switch (currentView) {\n      case 'capture-payment':\n        this.submitPayment();\n        break;\n      case 'upload-statement':\n        this.submitStatement();\n        break;\n      default:\n        this.tg?.close();\n    }\n  }\n\n  getCurrentView() {\n    // Determine current view based on DOM state\n    if (document.getElementById('transactions-view')?.style.display !== 'none') {\n      return 'transactions';\n    }\n    if (document.getElementById('analytics-view')?.style.display !== 'none') {\n      return 'analytics';\n    }\n    if (document.getElementById('capture-view')?.style.display !== 'none') {\n      return 'capture-payment';\n    }\n    if (document.getElementById('upload-view')?.style.display !== 'none') {\n      return 'upload-statement';\n    }\n    return 'main';\n  }\n\n  showBackButton() {\n    if (this.tg?.BackButton) {\n      this.tg.BackButton.show();\n    }\n  }\n\n  hideBackButton() {\n    if (this.tg?.BackButton) {\n      this.tg.BackButton.hide();\n    }\n  }\n\n  showMainButton(text = 'Continue') {\n    if (this.tg?.MainButton) {\n      this.tg.MainButton.setText(text);\n      this.tg.MainButton.show();\n    }\n  }\n\n  hideMainButton() {\n    if (this.tg?.MainButton) {\n      this.tg.MainButton.hide();\n    }\n  }\n\n  showPopup(options) {\n    if (!this.tg?.showPopup) return Promise.resolve(null);\n    \n    return new Promise((resolve) => {\n      this.tg.showPopup(options, (buttonId) => {\n        resolve(buttonId);\n      });\n    });\n  }\n\n  showAlert(message) {\n    if (this.tg?.showAlert) {\n      this.tg.showAlert(message);\n    } else {\n      alert(message);\n    }\n  }\n\n  showConfirm(message) {\n    if (this.tg?.showConfirm) {\n      return new Promise((resolve) => {\n        this.tg.showConfirm(message, (confirmed) => {\n          resolve(confirmed);\n        });\n      });\n    } else {\n      return Promise.resolve(confirm(message));\n    }\n  }\n\n  sendData(data) {\n    if (this.tg?.sendData) {\n      this.tg.sendData(JSON.stringify(data));\n    }\n  }\n\n  close() {\n    if (this.tg?.close) {\n      this.tg.close();\n    }\n  }\n\n  // User data getters\n  getUser() {\n    return this.user;\n  }\n\n  getUserId() {\n    return this.user?.id;\n  }\n\n  getUserName() {\n    return this.user?.first_name || 'User';\n  }\n\n  getUserAvatar() {\n    return this.user?.photo_url;\n  }\n\n  getInitData() {\n    return this.initData;\n  }\n\n  // Utility methods\n  isTelegram() {\n    return !!this.tg;\n  }\n\n  getPlatform() {\n    return this.tg?.platform || 'unknown';\n  }\n\n  getVersion() {\n    return this.tg?.version || 'unknown';\n  }\n\n  isExpanded() {\n    return this.tg?.isExpanded || false;\n  }\n\n  getViewportHeight() {\n    return this.tg?.viewportHeight || window.innerHeight;\n  }\n\n  getViewportStableHeight() {\n    return this.tg?.viewportStableHeight || window.innerHeight;\n  }\n\n  // Haptic feedback\n  impactOccurred(style = 'medium') {\n    if (this.tg?.HapticFeedback?.impactOccurred) {\n      this.tg.HapticFeedback.impactOccurred(style);\n    }\n  }\n\n  notificationOccurred(type = 'success') {\n    if (this.tg?.HapticFeedback?.notificationOccurred) {\n      this.tg.HapticFeedback.notificationOccurred(type);\n    }\n  }\n\n  selectionChanged() {\n    if (this.tg?.HapticFeedback?.selectionChanged) {\n      this.tg.HapticFeedback.selectionChanged();\n    }\n  }\n}\n\n// Create global instance\nwindow.telegramService = new TelegramService();\n\n// Export for modules\nexport default window.telegramService;\n","/**\n * API Service for VeriPay Mini App\n * Handles communication with the VeriPay bot backend\n */\n\nimport telegramService from './telegram.js';\n\nexport class ApiService {\n  constructor() {\n    this.baseUrl = this.getBaseUrl();\n    this.timeout = 10000; // 10 seconds\n  }\n\n  getBaseUrl() {\n    // In production, this would be your bot's API endpoint\n    // For now, we'll use a mock API\n    return 'https://api.veripay.com'; // Replace with actual API URL\n  }\n\n  async request(endpoint, options = {}) {\n    const url = `${this.baseUrl}${endpoint}`;\n    \n    const defaultOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${telegramService.getInitData()}`,\n        'X-User-ID': telegramService.getUserId(),\n        'X-Platform': 'telegram-mini-app'\n      },\n      timeout: this.timeout\n    };\n\n    const config = { ...defaultOptions, ...options };\n\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), this.timeout);\n\n      const response = await fetch(url, {\n        ...config,\n        signal: controller.signal\n      });\n\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data;\n\n    } catch (error) {\n      console.error('API request failed:', error);\n      throw this.handleError(error);\n    }\n  }\n\n  handleError(error) {\n    if (error.name === 'AbortError') {\n      return new Error('Request timeout. Please check your connection.');\n    }\n    \n    if (error.message.includes('Failed to fetch')) {\n      return new Error('Network error. Please check your connection.');\n    }\n    \n    return error;\n  }\n\n  // Transaction methods\n  async getTransactions(params = {}) {\n    try {\n      const queryParams = new URLSearchParams({\n        limit: params.limit || 20,\n        offset: params.offset || 0,\n        ...params\n      });\n\n      return await this.request(`/api/transactions?${queryParams}`);\n    } catch (error) {\n      console.error('Failed to fetch transactions:', error);\n      throw error;\n    }\n  }\n\n  async getTransaction(id) {\n    try {\n      return await this.request(`/api/transactions/${id}`);\n    } catch (error) {\n      console.error('Failed to fetch transaction:', error);\n      throw error;\n    }\n  }\n\n  async createTransaction(transactionData) {\n    try {\n      return await this.request('/api/transactions', {\n        method: 'POST',\n        body: JSON.stringify(transactionData)\n      });\n    } catch (error) {\n      console.error('Failed to create transaction:', error);\n      throw error;\n    }\n  }\n\n  // User methods\n  async getUserProfile() {\n    try {\n      return await this.request('/api/user/profile');\n    } catch (error) {\n      console.error('Failed to fetch user profile:', error);\n      throw error;\n    }\n  }\n\n  async updateUserProfile(profileData) {\n    try {\n      return await this.request('/api/user/profile', {\n        method: 'PUT',\n        body: JSON.stringify(profileData)\n      });\n    } catch (error) {\n      console.error('Failed to update user profile:', error);\n      throw error;\n    }\n  }\n\n  // Analytics methods\n  async getAnalytics(params = {}) {\n    try {\n      const queryParams = new URLSearchParams({\n        period: params.period || 'week',\n        ...params\n      });\n\n      return await this.request(`/api/analytics?${queryParams}`);\n    } catch (error) {\n      console.error('Failed to fetch analytics:', error);\n      throw error;\n    }\n  }\n\n  async getDashboardData() {\n    try {\n      return await this.request('/api/dashboard');\n    } catch (error) {\n      console.error('Failed to fetch dashboard data:', error);\n      throw error;\n    }\n  }\n\n  // File upload methods\n  async uploadFile(file, type = 'receipt') {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('type', type);\n      formData.append('user_id', telegramService.getUserId());\n\n      return await this.request('/api/upload', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${telegramService.getInitData()}`\n        },\n        body: formData\n      });\n    } catch (error) {\n      console.error('Failed to upload file:', error);\n      throw error;\n    }\n  }\n\n  // Statement methods\n  async uploadStatement(file) {\n    try {\n      return await this.uploadFile(file, 'statement');\n    } catch (error) {\n      console.error('Failed to upload statement:', error);\n      throw error;\n    }\n  }\n\n  async processStatement(statementId) {\n    try {\n      return await this.request(`/api/statements/${statementId}/process`, {\n        method: 'POST'\n      });\n    } catch (error) {\n      console.error('Failed to process statement:', error);\n      throw error;\n    }\n  }\n\n  // Reconciliation methods\n  async getReconciliationData(params = {}) {\n    try {\n      const queryParams = new URLSearchParams(params);\n      return await this.request(`/api/reconciliation?${queryParams}`);\n    } catch (error) {\n      console.error('Failed to fetch reconciliation data:', error);\n      throw error;\n    }\n  }\n\n  async performReconciliation(data) {\n    try {\n      return await this.request('/api/reconciliation', {\n        method: 'POST',\n        body: JSON.stringify(data)\n      });\n    } catch (error) {\n      console.error('Failed to perform reconciliation:', error);\n      throw error;\n    }\n  }\n\n  // Notification methods\n  async getNotifications(params = {}) {\n    try {\n      const queryParams = new URLSearchParams({\n        unread_only: params.unread_only || false,\n        ...params\n      });\n\n      return await this.request(`/api/notifications?${queryParams}`);\n    } catch (error) {\n      console.error('Failed to fetch notifications:', error);\n      throw error;\n    }\n  }\n\n  async markNotificationAsRead(notificationId) {\n    try {\n      return await this.request(`/api/notifications/${notificationId}/read`, {\n        method: 'PUT'\n      });\n    } catch (error) {\n      console.error('Failed to mark notification as read:', error);\n      throw error;\n    }\n  }\n\n  // Health check\n  async healthCheck() {\n    try {\n      return await this.request('/api/health');\n    } catch (error) {\n      console.error('Health check failed:', error);\n      throw error;\n    }\n  }\n\n  // Mock data methods for development\n  getMockTransactions() {\n    return [\n      {\n        id: 1,\n        amount: 150.00,\n        bank_name: 'CBE',\n        receipt_number: 'CBE123456789',\n        created_at: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),\n        status: 'completed',\n        customer_name: 'John Doe'\n      },\n      {\n        id: 2,\n        amount: 75.50,\n        bank_name: 'Telebirr',\n        receipt_number: 'TB987654321',\n        created_at: new Date(Date.now() - 5 * 60 * 60 * 1000).toISOString(),\n        status: 'completed',\n        customer_name: 'Jane Smith'\n      },\n      {\n        id: 3,\n        amount: 200.00,\n        bank_name: 'Dashen Bank',\n        receipt_number: 'DB456789123',\n        created_at: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n        status: 'pending',\n        customer_name: 'Bob Johnson'\n      }\n    ];\n  }\n\n  getMockAnalytics() {\n    return {\n      total_transactions: 45,\n      total_amount: 6750.50,\n      today_transactions: 8,\n      today_amount: 1200.00,\n      weekly_chart: [\n        { day: 'Mon', amount: 450.00, count: 3 },\n        { day: 'Tue', amount: 320.50, count: 2 },\n        { day: 'Wed', amount: 680.00, count: 4 },\n        { day: 'Thu', amount: 290.00, count: 2 },\n        { day: 'Fri', amount: 560.00, count: 3 },\n        { day: 'Sat', amount: 890.00, count: 5 },\n        { day: 'Sun', amount: 1200.00, count: 8 }\n      ],\n      bank_breakdown: [\n        { bank: 'CBE', amount: 2500.00, percentage: 37 },\n        { bank: 'Telebirr', amount: 1800.50, percentage: 27 },\n        { bank: 'Dashen Bank', amount: 1450.00, percentage: 21 },\n        { bank: 'Other', amount: 1000.00, percentage: 15 }\n      ]\n    };\n  }\n}\n","/**\n * Storage Service for VeriPay Mini App\n * Handles local data persistence and caching\n */\n\nexport class StorageService {\n  constructor() {\n    this.prefix = 'veripay_';\n    this.encryptionKey = 'veripay_secure_key'; // In production, use proper encryption\n  }\n\n  // Generic storage methods\n  set(key, value, encrypt = false) {\n    try {\n      const data = encrypt ? this.encrypt(JSON.stringify(value)) : JSON.stringify(value);\n      localStorage.setItem(this.prefix + key, data);\n      return true;\n    } catch (error) {\n      console.error('Failed to store data:', error);\n      return false;\n    }\n  }\n\n  get(key, decrypt = false) {\n    try {\n      const data = localStorage.getItem(this.prefix + key);\n      if (!data) return null;\n      \n      const parsed = decrypt ? JSON.parse(this.decrypt(data)) : JSON.parse(data);\n      return parsed;\n    } catch (error) {\n      console.error('Failed to retrieve data:', error);\n      return null;\n    }\n  }\n\n  remove(key) {\n    try {\n      localStorage.removeItem(this.prefix + key);\n      return true;\n    } catch (error) {\n      console.error('Failed to remove data:', error);\n      return false;\n    }\n  }\n\n  clear() {\n    try {\n      const keys = Object.keys(localStorage).filter(key => key.startsWith(this.prefix));\n      keys.forEach(key => localStorage.removeItem(key));\n      return true;\n    } catch (error) {\n      console.error('Failed to clear storage:', error);\n      return false;\n    }\n  }\n\n  // User data methods\n  setUser(user) {\n    return this.set('user', user, true);\n  }\n\n  getUser() {\n    return this.get('user', true);\n  }\n\n  removeUser() {\n    return this.remove('user');\n  }\n\n  // Theme preferences\n  setTheme(theme) {\n    return this.set('theme', theme);\n  }\n\n  getTheme() {\n    return this.get('theme') || 'light';\n  }\n\n  // Transaction cache\n  setTransactions(transactions) {\n    return this.set('transactions', transactions);\n  }\n\n  getTransactions() {\n    return this.get('transactions') || [];\n  }\n\n  addTransaction(transaction) {\n    const transactions = this.getTransactions();\n    transactions.unshift(transaction);\n    return this.setTransactions(transactions.slice(0, 50)); // Keep last 50\n  }\n\n  // Analytics cache\n  setAnalytics(analytics) {\n    return this.set('analytics', analytics);\n  }\n\n  getAnalytics() {\n    return this.get('analytics');\n  }\n\n  // Settings\n  setSettings(settings) {\n    return this.set('settings', settings);\n  }\n\n  getSettings() {\n    return this.get('settings') || {\n      notifications: true,\n      haptic_feedback: true,\n      auto_refresh: true,\n      theme: 'auto'\n    };\n  }\n\n  updateSetting(key, value) {\n    const settings = this.getSettings();\n    settings[key] = value;\n    return this.setSettings(settings);\n  }\n\n  // Cache management\n  setCache(key, data, ttl = 300000) { // 5 minutes default TTL\n    const cacheData = {\n      data,\n      timestamp: Date.now(),\n      ttl\n    };\n    return this.set(`cache_${key}`, cacheData);\n  }\n\n  getCache(key) {\n    const cacheData = this.get(`cache_${key}`);\n    if (!cacheData) return null;\n\n    const now = Date.now();\n    if (now - cacheData.timestamp > cacheData.ttl) {\n      this.remove(`cache_${key}`);\n      return null;\n    }\n\n    return cacheData.data;\n  }\n\n  clearCache() {\n    try {\n      const keys = Object.keys(localStorage).filter(key => \n        key.startsWith(this.prefix + 'cache_')\n      );\n      keys.forEach(key => localStorage.removeItem(key));\n      return true;\n    } catch (error) {\n      console.error('Failed to clear cache:', error);\n      return false;\n    }\n  }\n\n  // Offline data\n  setOfflineData(key, data) {\n    return this.set(`offline_${key}`, data);\n  }\n\n  getOfflineData(key) {\n    return this.get(`offline_${key}`);\n  }\n\n  // Sync queue for offline actions\n  addToSyncQueue(action) {\n    const queue = this.getSyncQueue();\n    queue.push({\n      ...action,\n      id: Date.now() + Math.random(),\n      timestamp: Date.now()\n    });\n    return this.set('sync_queue', queue);\n  }\n\n  getSyncQueue() {\n    return this.get('sync_queue') || [];\n  }\n\n  removeFromSyncQueue(id) {\n    const queue = this.getSyncQueue();\n    const filtered = queue.filter(item => item.id !== id);\n    return this.set('sync_queue', filtered);\n  }\n\n  clearSyncQueue() {\n    return this.remove('sync_queue');\n  }\n\n  // Simple encryption/decryption (not for production use)\n  encrypt(text) {\n    // This is a simple XOR encryption - use proper encryption in production\n    let result = '';\n    for (let i = 0; i < text.length; i++) {\n      result += String.fromCharCode(\n        text.charCodeAt(i) ^ this.encryptionKey.charCodeAt(i % this.encryptionKey.length)\n      );\n    }\n    return btoa(result);\n  }\n\n  decrypt(encryptedText) {\n    try {\n      const text = atob(encryptedText);\n      let result = '';\n      for (let i = 0; i < text.length; i++) {\n        result += String.fromCharCode(\n          text.charCodeAt(i) ^ this.encryptionKey.charCodeAt(i % this.encryptionKey.length)\n        );\n      }\n      return result;\n    } catch (error) {\n      console.error('Failed to decrypt data:', error);\n      return null;\n    }\n  }\n\n  // Storage quota management\n  getStorageUsage() {\n    try {\n      let total = 0;\n      for (let key in localStorage) {\n        if (key.startsWith(this.prefix)) {\n          total += localStorage[key].length;\n        }\n      }\n      return {\n        used: total,\n        usedKB: Math.round(total / 1024 * 100) / 100,\n        usedMB: Math.round(total / 1024 / 1024 * 100) / 100\n      };\n    } catch (error) {\n      console.error('Failed to calculate storage usage:', error);\n      return { used: 0, usedKB: 0, usedMB: 0 };\n    }\n  }\n\n  // Cleanup old data\n  cleanup() {\n    try {\n      const now = Date.now();\n      const maxAge = 7 * 24 * 60 * 60 * 1000; // 7 days\n      \n      // Clean old cache entries\n      const keys = Object.keys(localStorage).filter(key => \n        key.startsWith(this.prefix + 'cache_')\n      );\n      \n      keys.forEach(key => {\n        const cacheData = this.get(key.replace(this.prefix, ''));\n        if (cacheData && now - cacheData.timestamp > maxAge) {\n          localStorage.removeItem(key);\n        }\n      });\n      \n      return true;\n    } catch (error) {\n      console.error('Failed to cleanup storage:', error);\n      return false;\n    }\n  }\n\n  // Export/Import data\n  exportData() {\n    try {\n      const data = {};\n      const keys = Object.keys(localStorage).filter(key => key.startsWith(this.prefix));\n      \n      keys.forEach(key => {\n        data[key] = localStorage.getItem(key);\n      });\n      \n      return JSON.stringify(data, null, 2);\n    } catch (error) {\n      console.error('Failed to export data:', error);\n      return null;\n    }\n  }\n\n  importData(jsonData) {\n    try {\n      const data = JSON.parse(jsonData);\n      const keys = Object.keys(data);\n      \n      keys.forEach(key => {\n        if (key.startsWith(this.prefix)) {\n          localStorage.setItem(key, data[key]);\n        }\n      });\n      \n      return true;\n    } catch (error) {\n      console.error('Failed to import data:', error);\n      return false;\n    }\n  }\n}\n","/**\n * VeriPay Mini App - Main Application Logic\n * Modern ES6+ JavaScript with advanced features\n */\n\nimport telegramService from './services/telegram.js';\nimport { ApiService } from './services/api.js';\nimport { StorageService } from './services/storage.js';\nimport { formatCurrency, formatDate, formatTime } from './utils/formatters.js';\n\nclass VeriPayApp {\n  constructor() {\n    this.api = new ApiService();\n    this.storage = new StorageService();\n    this.currentView = 'main';\n    this.user = null;\n    this.transactions = [];\n    \n    this.init();\n  }\n\n  async init() {\n    try {\n      // Wait for Telegram to be ready\n      await this.waitForTelegram();\n      \n      // Initialize user data\n      await this.initializeUser();\n      \n      // Set up event listeners\n      this.setupEventListeners();\n      \n      // Load initial data\n      await this.loadInitialData();\n      \n      // Show the app\n      this.showApp();\n      \n      console.log('VeriPay App initialized successfully');\n      \n    } catch (error) {\n      console.error('Failed to initialize VeriPay App:', error);\n      this.showError('Failed to initialize app. Please try again.');\n    }\n  }\n\n  async waitForTelegram() {\n    return new Promise((resolve) => {\n      const checkTelegram = () => {\n        if (telegramService.isReady) {\n          resolve();\n        } else {\n          setTimeout(checkTelegram, 100);\n        }\n      };\n      checkTelegram();\n    });\n  }\n\n  async initializeUser() {\n    this.user = telegramService.getUser();\n    \n    if (this.user) {\n      // Update UI with user info\n      this.updateUserInfo();\n      \n      // Store user data locally\n      this.storage.setUser(this.user);\n    } else {\n      console.warn('No user data available from Telegram');\n    }\n  }\n\n  updateUserInfo() {\n    const nameElement = document.getElementById('user-name');\n    const roleElement = document.getElementById('user-role');\n    const avatarElement = document.getElementById('user-avatar');\n    \n    if (nameElement && this.user) {\n      nameElement.textContent = `Welcome, ${this.user.first_name || 'User'}!`;\n    }\n    \n    if (roleElement) {\n      roleElement.textContent = 'Waiter'; // Default role\n    }\n    \n    if (avatarElement && this.user?.first_name) {\n      avatarElement.textContent = this.user.first_name.charAt(0).toUpperCase();\n    }\n  }\n\n  setupEventListeners() {\n    // Quick action buttons\n    document.getElementById('capture-payment-btn')?.addEventListener('click', () => {\n      this.showCapturePayment();\n    });\n    \n    document.getElementById('view-transactions-btn')?.addEventListener('click', () => {\n      this.showTransactions();\n    });\n    \n    document.getElementById('upload-statement-btn')?.addEventListener('click', () => {\n      this.showUploadStatement();\n    });\n    \n    document.getElementById('analytics-btn')?.addEventListener('click', () => {\n      this.showAnalytics();\n    });\n    \n    // Navigation buttons\n    document.getElementById('view-all-btn')?.addEventListener('click', () => {\n      this.showTransactions();\n    });\n    \n    // Theme toggle\n    document.getElementById('theme-toggle')?.addEventListener('click', () => {\n      this.toggleTheme();\n    });\n    \n    // Settings\n    document.getElementById('settings-btn')?.addEventListener('click', () => {\n      this.showSettings();\n    });\n  }\n\n  async loadInitialData() {\n    try {\n      // Load recent transactions\n      await this.loadRecentTransactions();\n      \n      // Load user preferences\n      this.loadUserPreferences();\n      \n    } catch (error) {\n      console.error('Failed to load initial data:', error);\n    }\n  }\n\n  async loadRecentTransactions() {\n    try {\n      // Try to load from API first\n      const transactions = await this.api.getTransactions({ limit: 5 });\n      \n      if (transactions && transactions.length > 0) {\n        this.transactions = transactions;\n        this.renderRecentTransactions();\n      } else {\n        // Fallback to mock data for demo\n        this.loadMockTransactions();\n      }\n      \n    } catch (error) {\n      console.error('Failed to load transactions:', error);\n      this.loadMockTransactions();\n    }\n  }\n\n  loadMockTransactions() {\n    // Mock data for demonstration\n    this.transactions = [\n      {\n        id: 1,\n        amount: 150.00,\n        bank_name: 'CBE',\n        receipt_number: 'CBE123456789',\n        created_at: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),\n        status: 'completed'\n      },\n      {\n        id: 2,\n        amount: 75.50,\n        bank_name: 'Telebirr',\n        receipt_number: 'TB987654321',\n        created_at: new Date(Date.now() - 5 * 60 * 60 * 1000).toISOString(),\n        status: 'completed'\n      },\n      {\n        id: 3,\n        amount: 200.00,\n        bank_name: 'Dashen Bank',\n        receipt_number: 'DB456789123',\n        created_at: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n        status: 'pending'\n      }\n    ];\n    \n    this.renderRecentTransactions();\n  }\n\n  renderRecentTransactions() {\n    const container = document.getElementById('recent-transactions');\n    if (!container) return;\n    \n    if (this.transactions.length === 0) {\n      container.innerHTML = `\n        <div class=\"text-center py-8 text-secondary-500\">\n          <svg class=\"w-12 h-12 mx-auto mb-4 text-secondary-300\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"></path>\n          </svg>\n          <p>No transactions yet</p>\n          <p class=\"text-sm\">Start capturing payments to see them here</p>\n        </div>\n      `;\n      return;\n    }\n    \n    container.innerHTML = this.transactions.map(transaction => `\n      <div class=\"transaction-card animate-slide-up\">\n        <div class=\"flex items-center justify-between\">\n          <div class=\"flex-1\">\n            <div class=\"flex items-center space-x-3\">\n              <div class=\"w-10 h-10 bg-gradient-to-r from-primary-500 to-primary-600 rounded-lg flex items-center justify-center\">\n                <span class=\"text-white font-semibold text-sm\">${transaction.bank_name.charAt(0)}</span>\n              </div>\n              <div class=\"flex-1\">\n                <div class=\"font-semibold text-secondary-900\">${formatCurrency(transaction.amount)} ETB</div>\n                <div class=\"text-sm text-secondary-600\">${transaction.bank_name}</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"text-right\">\n            <div class=\"text-xs text-secondary-500\">${formatTime(transaction.created_at)}</div>\n            <div class=\"status-indicator ${transaction.status === 'completed' ? 'status-success' : 'status-pending'}\">\n              ${transaction.status}\n            </div>\n          </div>\n        </div>\n        <div class=\"mt-2 text-xs text-secondary-500\">\n          Ref: ${transaction.receipt_number}\n        </div>\n      </div>\n    `).join('');\n  }\n\n  showApp() {\n    const loadingScreen = document.getElementById('loading-screen');\n    const app = document.getElementById('app');\n    \n    if (loadingScreen) {\n      loadingScreen.style.display = 'none';\n    }\n    \n    if (app) {\n      app.style.opacity = '1';\n    }\n  }\n\n  showCapturePayment() {\n    telegramService.impactOccurred('medium');\n    \n    // Send data to bot\n    telegramService.sendData({\n      action: 'capture_payment',\n      user_id: this.user?.id\n    });\n    \n    // Show confirmation\n    this.showToast('Opening payment capture...', 'info');\n  }\n\n  showTransactions() {\n    telegramService.impactOccurred('light');\n    this.currentView = 'transactions';\n    \n    // Send data to bot\n    telegramService.sendData({\n      action: 'view_transactions',\n      user_id: this.user?.id\n    });\n    \n    // Show confirmation\n    this.showToast('Loading transactions...', 'info');\n  }\n\n  showUploadStatement() {\n    telegramService.impactOccurred('medium');\n    \n    // Send data to bot\n    telegramService.sendData({\n      action: 'upload_statement',\n      user_id: this.user?.id\n    });\n    \n    // Show confirmation\n    this.showToast('Opening statement upload...', 'info');\n  }\n\n  showAnalytics() {\n    telegramService.impactOccurred('light');\n    \n    // Send data to bot\n    telegramService.sendData({\n      action: 'view_analytics',\n      user_id: this.user?.id\n    });\n    \n    // Show confirmation\n    this.showToast('Loading analytics...', 'info');\n  }\n\n  showSettings() {\n    telegramService.impactOccurred('light');\n    \n    // Show settings popup\n    telegramService.showPopup({\n      title: 'Settings',\n      message: 'Settings panel coming soon!',\n      buttons: [\n        { id: 'ok', type: 'default', text: 'OK' }\n      ]\n    });\n  }\n\n  toggleTheme() {\n    telegramService.impactOccurred('light');\n    \n    const currentTheme = document.documentElement.getAttribute('data-theme');\n    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';\n    \n    document.documentElement.setAttribute('data-theme', newTheme);\n    this.storage.setTheme(newTheme);\n    \n    this.showToast(`Switched to ${newTheme} theme`, 'success');\n  }\n\n  loadUserPreferences() {\n    const theme = this.storage.getTheme();\n    if (theme) {\n      document.documentElement.setAttribute('data-theme', theme);\n    }\n  }\n\n  showToast(message, type = 'info') {\n    // Create toast element\n    const toast = document.createElement('div');\n    toast.className = `fixed top-20 left-4 right-4 z-50 p-4 rounded-lg shadow-lg transform transition-all duration-300 translate-y-0 opacity-100`;\n    \n    const colors = {\n      success: 'bg-green-500 text-white',\n      error: 'bg-red-500 text-white',\n      warning: 'bg-yellow-500 text-white',\n      info: 'bg-blue-500 text-white'\n    };\n    \n    toast.className += ` ${colors[type] || colors.info}`;\n    toast.textContent = message;\n    \n    document.body.appendChild(toast);\n    \n    // Auto remove after 3 seconds\n    setTimeout(() => {\n      toast.style.transform = 'translateY(-100px)';\n      toast.style.opacity = '0';\n      setTimeout(() => {\n        document.body.removeChild(toast);\n      }, 300);\n    }, 3000);\n  }\n\n  showError(message) {\n    this.showToast(message, 'error');\n  }\n\n  showMainView() {\n    this.currentView = 'main';\n    telegramService.hideBackButton();\n    telegramService.hideMainButton();\n  }\n}\n\n// Initialize app when DOM is ready\ndocument.addEventListener('DOMContentLoaded', () => {\n  window.veriPayApp = new VeriPayApp();\n});\n\n// Export for modules\nexport default VeriPayApp;\n","/**\n * Utility functions for formatting data\n */\n\n// Currency formatting\nexport function formatCurrency(amount, currency = 'ETB') {\n  if (typeof amount !== 'number') {\n    amount = parseFloat(amount) || 0;\n  }\n  \n  return new Intl.NumberFormat('en-ET', {\n    style: 'currency',\n    currency: currency,\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  }).format(amount);\n}\n\n// Date formatting\nexport function formatDate(date, options = {}) {\n  if (!date) return 'N/A';\n  \n  const dateObj = new Date(date);\n  if (isNaN(dateObj.getTime())) return 'Invalid Date';\n  \n  const defaultOptions = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  };\n  \n  return new Intl.DateTimeFormat('en-US', { ...defaultOptions, ...options }).format(dateObj);\n}\n\n// Time formatting\nexport function formatTime(date, options = {}) {\n  if (!date) return 'N/A';\n  \n  const dateObj = new Date(date);\n  if (isNaN(dateObj.getTime())) return 'Invalid Time';\n  \n  const defaultOptions = {\n    hour: '2-digit',\n    minute: '2-digit',\n    hour12: true\n  };\n  \n  return new Intl.DateTimeFormat('en-US', { ...defaultOptions, ...options }).format(dateObj);\n}\n\n// DateTime formatting\nexport function formatDateTime(date, options = {}) {\n  if (!date) return 'N/A';\n  \n  const dateObj = new Date(date);\n  if (isNaN(dateObj.getTime())) return 'Invalid DateTime';\n  \n  const defaultOptions = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n    hour12: true\n  };\n  \n  return new Intl.DateTimeFormat('en-US', { ...defaultOptions, ...options }).format(dateObj);\n}\n\n// Relative time formatting\nexport function formatRelativeTime(date) {\n  if (!date) return 'N/A';\n  \n  const dateObj = new Date(date);\n  if (isNaN(dateObj.getTime())) return 'Invalid Date';\n  \n  const now = new Date();\n  const diffInSeconds = Math.floor((now - dateObj) / 1000);\n  \n  if (diffInSeconds < 60) {\n    return 'Just now';\n  } else if (diffInSeconds < 3600) {\n    const minutes = Math.floor(diffInSeconds / 60);\n    return `${minutes} minute${minutes > 1 ? 's' : ''} ago`;\n  } else if (diffInSeconds < 86400) {\n    const hours = Math.floor(diffInSeconds / 3600);\n    return `${hours} hour${hours > 1 ? 's' : ''} ago`;\n  } else if (diffInSeconds < 2592000) {\n    const days = Math.floor(diffInSeconds / 86400);\n    return `${days} day${days > 1 ? 's' : ''} ago`;\n  } else {\n    return formatDate(date);\n  }\n}\n\n// Number formatting\nexport function formatNumber(number, options = {}) {\n  if (typeof number !== 'number') {\n    number = parseFloat(number) || 0;\n  }\n  \n  const defaultOptions = {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2\n  };\n  \n  return new Intl.NumberFormat('en-US', { ...defaultOptions, ...options }).format(number);\n}\n\n// Percentage formatting\nexport function formatPercentage(value, total, decimals = 1) {\n  if (!total || total === 0) return '0%';\n  \n  const percentage = (value / total) * 100;\n  return `${percentage.toFixed(decimals)}%`;\n}\n\n// File size formatting\nexport function formatFileSize(bytes) {\n  if (bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\n// Phone number formatting\nexport function formatPhoneNumber(phone) {\n  if (!phone) return '';\n  \n  // Remove all non-digit characters\n  const cleaned = phone.replace(/\\D/g, '');\n  \n  // Ethiopian phone number formatting\n  if (cleaned.startsWith('251')) {\n    return `+251 ${cleaned.slice(3, 6)} ${cleaned.slice(6, 9)} ${cleaned.slice(9)}`;\n  } else if (cleaned.startsWith('09')) {\n    return `+251 ${cleaned.slice(1, 4)} ${cleaned.slice(4, 7)} ${cleaned.slice(7)}`;\n  }\n  \n  return phone;\n}\n\n// Bank name formatting\nexport function formatBankName(bankName) {\n  if (!bankName) return 'Unknown Bank';\n  \n  const bankMap = {\n    'CBE': 'Commercial Bank of Ethiopia',\n    'Telebirr': 'Telebirr',\n    'Dashen Bank': 'Dashen Bank',\n    'Awash Bank': 'Awash Bank',\n    'Abyssinia Bank': 'Abyssinia Bank',\n    'Nib Bank': 'Nib Bank',\n    'United Bank': 'United Bank',\n    'Wegagen Bank': 'Wegagen Bank'\n  };\n  \n  return bankMap[bankName] || bankName;\n}\n\n// Transaction status formatting\nexport function formatTransactionStatus(status) {\n  const statusMap = {\n    'completed': 'Completed',\n    'pending': 'Pending',\n    'failed': 'Failed',\n    'cancelled': 'Cancelled',\n    'processing': 'Processing'\n  };\n  \n  return statusMap[status] || status;\n}\n\n// Status color mapping\nexport function getStatusColor(status) {\n  const colorMap = {\n    'completed': 'green',\n    'pending': 'yellow',\n    'failed': 'red',\n    'cancelled': 'gray',\n    'processing': 'blue'\n  };\n  \n  return colorMap[status] || 'gray';\n}\n\n// Truncate text\nexport function truncateText(text, maxLength = 50) {\n  if (!text) return '';\n  if (text.length <= maxLength) return text;\n  return text.slice(0, maxLength) + '...';\n}\n\n// Capitalize first letter\nexport function capitalize(text) {\n  if (!text) return '';\n  return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\n}\n\n// Format initials\nexport function formatInitials(name) {\n  if (!name) return 'U';\n  \n  const words = name.trim().split(' ');\n  if (words.length === 1) {\n    return words[0].charAt(0).toUpperCase();\n  }\n  \n  return (words[0].charAt(0) + words[words.length - 1].charAt(0)).toUpperCase();\n}\n\n// Format receipt number\nexport function formatReceiptNumber(receiptNumber) {\n  if (!receiptNumber) return 'N/A';\n  \n  // Add spaces for better readability\n  return receiptNumber.replace(/(.{4})/g, '$1 ').trim();\n}\n\n// Format amount with color\nexport function formatAmountWithColor(amount, type = 'income') {\n  const formatted = formatCurrency(amount);\n  const color = type === 'income' ? 'text-green-600' : 'text-red-600';\n  return `<span class=\"${color}\">${formatted}</span>`;\n}\n\n// Format large numbers\nexport function formatLargeNumber(number) {\n  if (number >= 1000000) {\n    return (number / 1000000).toFixed(1) + 'M';\n  } else if (number >= 1000) {\n    return (number / 1000).toFixed(1) + 'K';\n  }\n  return number.toString();\n}\n\n// Format duration\nexport function formatDuration(milliseconds) {\n  const seconds = Math.floor(milliseconds / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n  \n  if (days > 0) {\n    return `${days}d ${hours % 24}h`;\n  } else if (hours > 0) {\n    return `${hours}h ${minutes % 60}m`;\n  } else if (minutes > 0) {\n    return `${minutes}m ${seconds % 60}s`;\n  } else {\n    return `${seconds}s`;\n  }\n}\n"],"names":["window","telegramService","constructor","this","tg","_a","Telegram","WebApp","isReady","user","initData","init","ready","expand","initDataUnsafe","setupTheme","setupBackButton","setupMainButton","error","theme","colorScheme","document","documentElement","setAttribute","themeParams","root","params","bg_color","style","setProperty","text_color","hint_color","link_color","button_color","button_text_color","secondary_bg_color","BackButton","onClick","handleBackButton","MainButton","setText","color","textColor","handleMainButton","getCurrentView","showMainView","close","submitPayment","submitStatement","getElementById","display","_b","_c","_d","showBackButton","show","hideBackButton","hide","showMainButton","text","hideMainButton","showPopup","options","Promise","resolve","buttonId","showAlert","message","alert","showConfirm","confirmed","confirm","sendData","data","JSON","stringify","getUser","getUserId","id","getUserName","first_name","getUserAvatar","photo_url","getInitData","isTelegram","getPlatform","platform","getVersion","version","isExpanded","getViewportHeight","viewportHeight","innerHeight","getViewportStableHeight","viewportStableHeight","impactOccurred","HapticFeedback","notificationOccurred","type","selectionChanged","ApiService","baseUrl","getBaseUrl","timeout","request","endpoint","url","config","method","headers","Authorization","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","signal","clearTimeout","ok","Error","status","json","handleError","name","includes","getTransactions","queryParams","URLSearchParams","limit","offset","getTransaction","createTransaction","transactionData","body","getUserProfile","updateUserProfile","profileData","getAnalytics","period","getDashboardData","uploadFile","file","formData","FormData","append","uploadStatement","processStatement","statementId","getReconciliationData","performReconciliation","getNotifications","unread_only","markNotificationAsRead","notificationId","healthCheck","getMockTransactions","amount","bank_name","receipt_number","created_at","Date","now","toISOString","customer_name","getMockAnalytics","total_transactions","total_amount","today_transactions","today_amount","weekly_chart","day","count","bank_breakdown","bank","percentage","StorageService","prefix","encryptionKey","set","key","value","encrypt","localStorage","setItem","get","decrypt","getItem","parse","remove","removeItem","clear","Object","keys","filter","startsWith","forEach","setUser","removeUser","setTheme","getTheme","setTransactions","transactions","addTransaction","transaction","unshift","slice","setAnalytics","analytics","setSettings","settings","getSettings","notifications","haptic_feedback","auto_refresh","updateSetting","setCache","ttl","cacheData","timestamp","getCache","clearCache","setOfflineData","getOfflineData","addToSyncQueue","action","queue","getSyncQueue","push","Math","random","removeFromSyncQueue","filtered","item","clearSyncQueue","result","i","length","String","fromCharCode","charCodeAt","btoa","encryptedText","atob","getStorageUsage","total","used","usedKB","round","usedMB","cleanup","maxAge","replace","exportData","importData","jsonData","VeriPayApp","api","storage","currentView","waitForTelegram","initializeUser","setupEventListeners","loadInitialData","showApp","showError","checkTelegram","updateUserInfo","nameElement","roleElement","avatarElement","textContent","charAt","toUpperCase","addEventListener","showCapturePayment","showTransactions","showUploadStatement","showAnalytics","_e","_f","toggleTheme","_g","showSettings","loadRecentTransactions","loadUserPreferences","renderRecentTransactions","loadMockTransactions","container","innerHTML","map","currency","parseFloat","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","formatCurrency","date","dateObj","isNaN","getTime","DateTimeFormat","hour","minute","hour12","formatTime","join","loadingScreen","app","opacity","user_id","showToast","title","buttons","newTheme","getAttribute","toast","createElement","className","colors","success","warning","info","appendChild","transform","removeChild","veriPayApp"],"mappings":"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"}